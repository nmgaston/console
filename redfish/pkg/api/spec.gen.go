// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+x9a3cbN7LgX8HpzTmZ7KVoyzM3O9GXHVm2Z7QTR1rJmtkzSUYEu0ES102AAdCUGV/9",
	"9z2owqsfJJs0JduJP4nqbgCFQqHeKLzPcjlfSMGE0dnJ+0znMzan8PM0N1yKczGRt5dU0TkzTL1ZLRi8",
	"ZKKaZyc/Zs+lLBkV2SD7oZqPmQo/TpWiq2yQXRvFxTT88I8vxv/FchN+4OOfB5lZLVh2kmnf6t2RHekF",
	"07niCwsPjO5HPclOyRh/DyMI9qmAn8MGOCfZqSDU/iRy4r7RwwgOvGfzMSsKVpD/c33xA5HwZtiAtN5R",
	"8iH05uZs4cCJDBvzrzfHb/Qwu78fdGId5kyLgttXtLxUcsGU4XYlJrTUbJAVEUHZSfZmxggXE6nm1D4h",
	"dCwrQyhZ+A4JF3lZ2TlyQSi5YsWE6xmhMDaZSEXMjGuimJaVypkFf5EM+j47LUt5R8clQ+zCszYM1H9l",
	"Uc0Uz8mSlhXTRCpSVAqBw0cDBEnzJSOKiqn9aBLeUWEhzRWbM2FoSbRhC99XgDbOjmpCF4uSs4IYiS/d",
	"1AxVUwaryQ2bA9iiKksLY3ZiVMWaFHg/yBSjxYUoV40PqKPkd0elFNMXjclbeBBjK6JntCwJFwXPqWHE",
	"bMDMo6JhYL8o2IQLJAQL2NdhZdOO3U4BAPzC6a9JXtJKMwuhbeqp6HrBcj6xc+VSDAl5JRXSuh44COuI",
	"UWyhmGbCNDCTjM9oPnP7Zc5gYxPShWMpyhUZM+I7dLADggNegPxwedOHZkYN0QD7itAwzSEs8ZIpzaU4",
	"tXwhO8mWx7d/vH1qiSOg65Iaw5TYthEW+Nm+VNsk1jW0mbDPfsSZS2Eo8ALFplVJFWHvLBI1DG8xg5Ma",
	"M71+lXadz0cnjRYR9F3sf9jxm0KpvuzpW7tDemDso7Alv/IWwcUeMFtsN1pix3SxYFR5vqLpnHmJpwqk",
	"Dvt8VMepHgX4diaPXtC3yWXNkv+pa8m3yrnfhkz69PY0LIV9cM1/Za/pOz636mfXWszxpRNZQAfQEStB",
	"amockRVr9h8qTdlJxoX59k/9OS4Xhk1B/d1n420FGlgwQKuZWvKcEV0tFlKZtXuyPaCQpiUbpTjCkbbz",
	"wGduQ4RV4GLDKuDL9RNS7JeKq09tGXpDPV7VV+ORF+EFNfQNzLgL+WCOhHEtZtZgWQp2MclOfnyffaXY",
	"JDvJ/seTaA0+cabgk/V24P0gGIJ2fX6+/7m9MPusQ88JWESwCa1KA8y5GxkFfoHsZQ0eHlqrMj3gIBy1",
	"6LzkljAKyTQQy0LJJS+QQ+9IXHxCRleOYkceGE1GdlKjISHnEzLylDSKI3qoR2ixjgYowD3f8TNbMoUs",
	"HGdkJKGCXL06+/Oz//zuyFsVsJLRBu4i6f9EknZMfcNKeibpOB8rDrGmwnst1q6pYykkmEF9GLnDyVqu",
	"vbOcrHe8i+K7huN0TGsr9zl2S4VsctNSOUb6SS+Vg/HwS1Xr+OMu1Q90vmaJhFXIneUemVBYINTqbO8P",
	"wQy7B9/klAJu/4PczO/PnTob9CWmGOGWqx1SDIyDy3MPNXtXsJD42Ds6X5RsYFl6pZkC/FFRkAXV+k6q",
	"InVkUMWIXKCrEHk3HWsm8jbGdYAMgMkVK5gwnJbYSaVZcQBJY+nWfpCu3YhAn9B6i2BAt+tmjaeghqKe",
	"YHU24XyxR2OqWfE4ot67RwDBFolecQFJCI5bS9ajv0gL69CAyEUt1y37dvE+ZnW1OVnHO25mhNbxMELM",
	"Af5HifN6hI7EtSyn2a20BBu71rAV/Wq31+NUeKqyc5YTcjdj0ENjsyfatJHE6p0lgy3Sh/t8wB78AHDu",
	"wfL2E/8RuWsMWkgf09iVJR7aV//uyLkZL2tO+3//4Ud69Ovp0b9uf3Y/nh59d/vz//zmf//lD0CW/+06",
	"/+/XTGs6Zd/89NOwu8lXXfuwPcHoTl3SkhcERrH06GcRnD3ZvUXu2YxqzfWZLEsG87ttPdkjFJKHxrAt",
	"XJejgDLChTZU5Ey3Ax1uv9qVYu+MfbLJVIKPj5Z/uvXf3w98D8zQae/m8HFsy4veLXmRtDOOYfZqCR+D",
	"SZXg731PG/HKofI2bb3dPLTKJNsQQEJtSaPg4jpZyZq7rCdmrtjkARynNInklVy81egZ2wx8nHggsErs",
	"Ql7261Yngr0z33Pxtnc/oUGiKvZaZvjYCmc2793GftvkoH71u9GRboA6UQ92571htzd1dhpfreMUgUEA",
	"v41MmFspAcG4GCr6vFmvZ7h7sNmILlz6iGJ09S9mK81zWpJIJKCuEb3Shs290hMWo9FczxgzR3NmoAeB",
	"/gW9oHZVrD5Tyin0/qsUTBNdWZNLE0Xzt3pAmMhLqSvF9IDkCCY0gsgQqANuO1uTipDraoxA6UHoSTOh",
	"pQILkBpi8WG1CVkZzQuWTuRrjcrSoqSCgSJt2QIrCOOoSXHFclOuQC8W4T8zU7KazhrSnJBToj00taF1",
	"v7GtgkfznGnNxyW4abScmDv7CnpTldBEuiCNX4hzQ2ipZSPoV0pU6iJOKNGlNAOiZf6WmYGd0ZiuBlbH",
	"UoxQUgluSE6FVTFhD5UlKwZkvCILuahKariYpvvP7zOnzwq0XAzRxuKaT3yX3PvGggHxe5fabu+96dG2",
	"sdPfuB7Oi96c/LxAj52oJjQ3lWJqnccufhHFIA77WH7X1NUg1ZQK/isq2orphRS4K8DsUbKockuQ4IZ1",
	"UDqmVGs5pxBJTiy9iZJzcjeT87QtmLiVsv8B0VfOweSIVzC7Kanidu+riqFSIAtWrkGmfZWEJlIoHxOX",
	"4xW5m/F85tySyQpPmWCKluWKKDaBlApZh3JfLeOaKU5Ln93VhRwNX3w87NAaJo5oCbySFR4iYLUcvCsT",
	"7thpipZrQ02leyPGfd7UptIdvUl3Oi8OrEB5ipfKSdMg64Pg3aw5gcix+wrETtr1nkLH7dFU6FTonh1Z",
	"5LGYZwCyxhH4CBGbvIy+rFMQRaPfkpLnpYVP5ryi+dtskD0vaWHJ5KVfO8hepKI4LaWw/9jvXjsN/Yyq",
	"Av8YxYspvJZ32SC7lPb5y3cLKrSdwSC75gXLqcoG2b+wn+uS2W+uZ6ycZIPshaJ34OB/LYuqtB+c+T1g",
	"ifbyuWWkLxRfehj+qmS1AOCkolOWwns+n6ND8Q0Vdk5/Y9S8fJfPqMDw8KW8Y+raKG7bX1ia3SH7FPCD",
	"uaIwJCsgpYzN+ZF/MCBmtbA7oFyRpSUR+HkkFWfC2NdOo/M7BxjEvNLojSur6RQcPkZa1lKVhh81G0gy",
	"qQTaKkKque1+6NfjJDslpZSakYJBMEMqknOVV9yQsaQKumaiQGdXuk/QyeTGCts57OJhbakhwXUOhMjK",
	"yZFXoQvfvjFIj2kNa4se+3evBySnqoAt7yYGeAubFB96K21BLd4hmy2q0FIFvA0jzfVfzJlU/Fc73vbl",
	"dIqvtjtzy5wj6do5gyDlOTFMzd1cah2HUO2EG0LFyrtoI50Oa1vP9lnrgNlXhRNDdEHHvOSWiwGd0AXN",
	"rVIDrnRnHEVI6xvJ9jxj0KN7NGxu1XRwIK7CPgbfN7ECUyrU9s8vnb9eMHMn1Vu7qgKNcRi4vqPRz+wf",
	"kVzKElQ3Kt4OIwcJBJSuoGJzubTKwCCVW5awPpiakJG00N1eL1BQdBodgDlangmta34IK+EXVlaiNYtY",
	"LKmasgEp+VsGCiQVeiGVcfPyxuywzups3wv7L8TkFylWFiXNYxrwr0zJoxs0r9G+tEMPHd9126UGVtoX",
	"JcffHXGRz8idtU8nijFr1xV2hax0Htb4N1C8/WUHwhkC1oBCKNFcTMugadutObPGKxcTRbVRFahcw5pU",
	"gmWHZk2uWTDNp+g4cEnKFl67wHPb0gKILr365IZOqm1dm2EQZw/CUQ4hILwUblHpHJwKc2Y3sgPNmeE1",
	"JmA7Rv5BuNFr2cfQy/dtiHiIeRLN59zuVGg2tvIaw2IJI0s0mkgvAyDWo0CtOJbdUPM5ZBDnKCUpMbCN",
	"QBDpt0Yu6l039JE2A8bpa6Lx06FXilByoyer4EsO3M1ap1J5kqOJJ60mbjzfAjQtShYYmEU6urOCYPJx",
	"P9eTRRlbUGVtFjBIUPP5Ry0o+77F/JfHt8/+ePu0zfJdznSba8cWNbZkH/8nPE75gkvD7UTo8vj229un",
	"YAJZhaEyTF3DHNPg0ZoXB4gh1Xr+Ekr6Ekr6Ekr6EkraFEpqMIzfQ0SpNuUGM94rvtTAYTvMRCG2ZL+J",
	"Mi8GFazKAmEOFwA5suJ1XLKwaBosS+AFqVcoRlSiE2rO5lKtBuTs8gbTabwJhhIX/X1oAmL0ZUjIC2Yo",
	"L90utsZ5GBegDTEniNuAI8wFjrpDQw8nYH7LQuLBwxyKXLx8HTi1C6k9igs6yWRtxE7bgZgQ7NsSdcCo",
	"iEHXf0g28mqx3SSyMu0x7OePkm43k3ft0dPwQ1wDQt54m8ul8SLCuAtPb5jptonuK/OcDkzNmrzGvFLK",
	"yhVvs0PEub58g113TDLmQ53f2ADuHtGcxlo8VrCrC4j6PPaL2QwylF+9QrV1EZo0bGo/jxnsAaCidex9",
	"Rt3nv39DGswV08xcsV8qps1zWax21mHiaUmLTJ/XEqi6Ls1htD5EEigstrDA915qB5JfaM1MAldceX/q",
	"jaXJKa+aroWgv5LTs8tzAsyGPK+MkSK4aWjJzQoz00eXlZ7BR/jNyPFkBGbBFDgBpSJsXpWWnVDR0bHt",
	"ZBDUu9ErqXJ2MZl0d9bZw8WSKcULlnh63gp5JzDeOJGVOtIsl6IgM1kWIZEeuhhDF78lQq8zKB8dvHS+",
	"omyQ/YMrU8Gvi+tsEN6Uq0uqDOwHCOy5z5qPIcCj4eeLy5tNcbeFYhBGt2BcXPvJ4qrOqCZjxgQpwmeW",
	"E03oUoKOEwjXcirMmYo8y6W2A7lc+HdNZ07iCGuGAMMU0CPsbA7vmZQCHdO4ZcYcfYmBpY5LCU5uOYVM",
	"9KHDQ1dXsKcc5SK78JvI5c6hbaIkJHg593oaKr+eU2V+OD8b4lqBM7aJjGAhDZO17AJnuHatIQ5EVQFm",
	"VTh2ga8R0I6uPBXZxkv8TeY0n3GRZIKpSghYQdFUAjqpK+3L8iZv6vWDKaz393VW2V7zUdwjo2Dg27ej",
	"WqQpsUxdHKODRiB7qOCaTqeKTYGQo2UYbb8oYUEIaJyIO66WElELtheXNz3BqtObnExKSQuHJ3c+Qe9F",
	"dW2gLq7XwSTIxbVdvNlqYSenpSJLzu7amm+NVlsD+LdrhrFdeZIl1HLMej5qOp85FXSKYs2qiEqWpYut",
	"rd0Na8GpfbovtUgBMf25VElebRTESDKUTLiaw/wsNuvbM6GbdB+2wHYv1wOaEA4qE5WLAa7b0kNCrjD3",
	"jmmiZ7Iqi5riPbpEwpLquprPqVqNQLSPXoPLJTyL2hIktXpDcOEbQyN00yTbKWZmOddqA8qNjGUdcg6+",
	"pB6o9oo2GFpYxbUhm4RrhXAKMorl8e3xt3jGrta0Q+wuj2+fHbtoy2vYCyoJs7SefHh8xXX5JbDyJbDy",
	"JbDyJbCyIbASOMXvIKLi5uoZ7o5s9lz4fgdBpYGDrzTImUTP8WeYfSJbNOwxVx6KkmBoA7MsPMxeJBHy",
	"Ek+tw+5yw2Fs4/nrM03+YCUYJiN2qlf6m+TYTmg/WPNxGoRJIikAPip4LvEHm2PKyipaU0NCTkWDVmDe",
	"M7pkMaMigoE58HM+nUEiRTjGk561CVLb4eYoFls0TE3ogwZxvgizbmH2yunETtvpFmpBcXZlCYKAcATw",
	"WE7oFhxJxU7njauFI7ybmmotcw56boB4z+CXbdzHDdlgTv5Y0dYTLenh9waWB1um+1ir0D6f3yfslCL+",
	"cQT3oc6RPGIwIeHmMav29yLAmx7W1wEZZ0GypcnhXu4Psuevz3zGa3h2Wr3jJadqVWt8jeI4G2Sv6Fjx",
	"3H/f+7RDV7foG/T/Oq8R6gQ1JSI6KzfnUIf0X58/QaEGjkF/DKQ6p45DO/v9QEiN7Ib3z6oAZx3O/+ev",
	"z7bqKt80tB0854d1O1wXBcP6I+B4sGDE2fvE1pnUJuhlOBcuptC6lmVrZFRIPOxdZLLvKoXDFs1lGdTW",
	"qulJ54pYpPVU7lDhcoWNIs50opqi8uadonhgW6p8xrTBA9Cdc6C5kjpJggV4XFJ3eoylvh26ccXneD5z",
	"LgU3EitH46DoP3SedO9PDqiZQN+EGkPzGSuIkIWDX99xY2cAhxS6tvtBAImnfuKmSZnFvpRxN5MldBs3",
	"J6THP9ZaRvXb+2bbFgJ03dvCwJrXLsXf80rIB+90tPVA1QZfXJPklse3z55hgnMY2ZceBscBSKlb93cP",
	"r9ocW4a6Y00jjShmKiU6fGrJmO1uZ9WciiOraUHlXjfKQxSLo2vHivg5VVPdWYYquHw8GqiaVkk9XatX",
	"WzFkuKlMKEWbfuZLBbr2dzMmSCnlW1aQatF8q9iUa6NWNbfXQ5ftph9vmnBmd+bqeEN9b83mVBie61Dd",
	"O1mi5FBtI2HEf3XlevaZnViiFM6oSYXH9UEgjqAMLXrhMRYcT+lius7WmqX+WLYk1FeBD1ppYoqwcI9I",
	"JLfzontThNPd0Qp70I0xCvCMOi9yCK9dmbl+1zUkE71mS6a4WfW2Jv7GaGlme1ouV6y02lFdo29saaIZ",
	"SJ0k9OMTAaN9GHH+UTbh1auzb797elyvgLuQ4PEJ9RZ9lYkeE4Gaj3Rhv1TWoG8TFyBPy7Iyne6MG406",
	"p/fZ6Wo6ZdqlEAi0ZCWYaOUSi1pobircBM77V0EXD0vQPrEIp+GJ1A9IiJOQGpxyisFxxWajxhZocixf",
	"JRG0f38AMG3PRWizoKtS0kI30Htt2GJNHKTk2mDeSS7nczz3rO3ne6G3V9ykDtdt/d/s/qB0fYBp9S0l",
	"mkoOz4SwimX8L9k5oV71xd9HW+qmpyytSMKcSMJdiaj4fZMce9F/HOCKUd2B7G0ZTC0ceK+z8SVE3J0J",
	"LpjF4KobvJwn7AXPLkbIndt1L3zNi+HeebKdOOqUSThU34uD1m55FPo9dzt+DHserq7IqauDBZ69Dt/S",
	"sh0GDxWVW6ExrxLs4g6Dk6it+jE9VXWHVy8sfrO5t+7xS6XkmixxZl95Ro05FO0oVMuwYes7TDNK0iuP",
	"wHUAg/Ud5C8Oa8OX77ACxrmYyF42SlhbzHmL3ioEwH/VW0Q0bcj9hQLioWVsuGvv+oJ9P8hyWbBO5Q71",
	"8ERFolFKJ9quX4Uuu+vwavaHQ3U/yObrrOnTpn1bw1fD7gk5C/iyxjYeFgkHB7LJSIEmIp56c9M1nO8o",
	"MsgOZrv/Pm+CjczkYaENQG3jdC1FtakQ7nFcwZUw91UgaUsNDEmZCEUwe6JW3XF5JDjK6rdbdnDj5L4+",
	"HMMdVLi5OnfuyER1t7DUmOL+d9t03Wtzf5D71faZUrgS9ObqfM3tYz3QEu5TqhQ/gjglExAUeggzrtek",
	"9nARXCouo/belt74Ntw4x5w5Vhtbd94uNfd3WT19pJum+gKLt+uhCjt6Ouq6tm3GpzOmTehySMi5yBWj",
	"kJntLIRm4LVg4Yu03YSYOxlkdxMazIUJ3j7fEH1t7B3LnekO9/s5Am/1EZQJLtL7AHH0FqnE0kkwNo2I",
	"w4Qeq7oPavcrcU2eOrRFJGtSOS9IYbffnAu2C9AN3rr+Hgp/9UJHJ7ud1Oxk4i6l4mHObG4EHaZv1OrM",
	"Z0B23CcTSm8qZhQPaXibmNFH2371OqFbAPaTPxeGqSUtr+Eg2Bqpxd1HZMzMnbXtPwNseJghGobH3PQg",
	"TKAHhuywleBGW8lh8fUGLoMMhfzWii68NBIkha/Z6tvsIcseIxVod4jX3uXS9HgFMZ9GSpD5hXu02ipo",
	"gz3s6YeIKvA+Gh6y2yDDmo5Cf5dQ02OYeycQJaWcEiaMWg1A310CW6cW86ivQuZB0IQTN9xn7N/YxOWT",
	"pKAzS325+QcThbQ7/AodYWlpVJ/SeLMoqIHiqEwz42tsna3yMjx846/Q0nAQE1KpX3A6FVIbnr+ghmaD",
	"7OLl6/75Qd2dnPjnpAgv4NgYVvhMp3Ti/ydLeIBXM0fXSmN2J9mlP8kb0yMreBfTIIZuFsnHgly8fN1B",
	"vYGvJMhKx8BDvrl9Xu+/tRAn/pE7WghPh2E50k7xmHWju/rynOATrx4aLqZY7A5qZq68wqORJQRd+cxv",
	"mR3NvdO42XwJEWAymtj9JbotuTDYdpUo9L5HyYr6MA+tAdUg7QwmuGjC93L60vKs3Y+37JFdEctg1OB7",
	"rISL1L/XhOJLKsZvPxXjd5UAsYdv4kLxKRcXkxr73Y0pbAriX28N2j8oV+gOzschk1idO9D7MBH6tbed",
	"utv6Dxuor6H08wvIp8tz6u+VzqlVeOTCuz5cIkrLTSNF3ugFr0icy6U/sFwrBbNuYf7cDrzvmEv0hs+Z",
	"NnS+WKNf8HkTUJlD3ayiZixa/fDIfnzA7VHzw20E5H6Q3WimTiszs0wSec01THVNCSw8MGGNo1qbwFrD",
	"NbABpuTMTyhuUiPhx7CPb66+9yGgBuC1DFquO8FtTcpbz46rjJ0haZEQpqa9vqqr0vjoiO0puUa0U417",
	"irR54wbtXogAUvDYw7nXTwPb+wH34Dh9qCwJ9POGLyHTu4hFNWnThGHvuDZJKc/0KJLz1ZS1ciubLJ/P",
	"2tPQYUYlLobTkim4YiWec4PiTuEavB1OC0FXvqZDIjqs6LLvhq1xOj7m6QfDGiQdX0MUBOSFq9/iP95S",
	"0CfCGopKNfg6XWsUQ9A7b15MBBZ59wx3HyJQ34DMKVylQkXOBljWyO55OOwMmxI9uP5rD4+r4xPu2GMG",
	"Ep5zw5d2ZMHuggOljePe8Ibc6/XLALGd4MP0Ca5OIHSlatPyjq50SFmtG5xWeVS+gEzD+9E4S9xxU3jC",
	"PvxBlaSe3U3khPO5q1QXYnRYbrhxZcch2PgWoGIIMDQFN1Jg7V8nw/W3cpq6VsIQLv6eDbJ/UiVwTmeK",
	"wwVGOzgFfQtwLLl/kiUMRM7nc1ZAXnON2V78PTvJfoDbHIYJKHU3VRefrlHDOku1EvyXqsNgTeVDUv+5",
	"XnHCXy0Ragodigo2gdOLCs6LPRb/h7WaT6pY1MQmWCBYOeVQc49jNWV0OlgfJNj57IGGi00lydelB1+8",
	"fE3YO8PglqUEFduVG/yiWY7M9hcdrG66ARu1UD5cUL+K896WWOT2CjiZPlttZpD9+8fTo3/Ro19hiP/4",
	"ahcvzQUuSl0lqhdgDuxPWBY0mfigABdTeBT+wVeQ4d6fJ9pWSDexqJXG8AIriJxM3IIn1yMnTCi0wZIj",
	"dvNwUUEiM6RGnN78P+wL2KfYNBKQqoO+4zN4MWxM13Jew+YLqahaudLOPkLsNPHeM8ipIIa+9Saz9DXb",
	"kpqqcjJJLI1kETbCYRsJmODB4BABjLWnOgMml8e3x3909k9HUd4mgfkytdkg+6uiOZtU5fWsMoW8E8mj",
	"K6YNBe0cvo///jDnoRMgznol3Wb077rSCyYKv/IYcKrAHfKqKsvk294EHSZwkr2pFOLfoHg1UbCXK/IH",
	"IcXR1E2IaDfJb4YJ/L4L0dnDsDn9k8yiithuaiPZ5U8Hc48UNgt9D9uzPoEHtWjf9rl8MyTkObP7T8NN",
	"bOggg4qYBgsMlVwwPSATWZbyDnVfC4xUrY+82yR1qTWJIJ12jym2yGpD+7Dvho62TrK/wn2+oPMnQVyw",
	"NVS1MP40CmRXuaKPgvzw+tyu4rs/f0vCFepGos8Rr+eKYU89QDnGDEtHwB2HJZ2Si9IGZEZL0ygB2kk6",
	"gb9lJ/g3TfRKKGwMuIAMC/RsOg7qHCTohAh32k0YNZUCpaJZ2jJWKtXtSPKHUZQPQOOthWWdlOJLS1Ks",
	"i4SabOEku+auljYmIroSrr6ktS8mmta2DsV3w+V9yDpO3I82elGI4Pcfik3PuU6yfyruwK7dLQAYNZIU",
	"XL8lYzaBoqhOZASpxLH2552OpfyhD7ya1CGwwICbl5Rjmr8lNd7f5UZI2eBas7kmeO54WeKVjc6OlmEl",
	"LQ8FwJwIS76CVrjJU9ZIyM1CCmv0W9llGazbU+ALwIKqQcuJkT84Vxps8kGHTu6yTi8mk1GDU3/4LMXj",
	"THLDrMSoQ6gcbmYDQieGqfAVxFl8OTjHqz+dJXbIaErEXdCxiEk5TTlKtQVko7CDyLiPLnlxZjfkDjjy",
	"XKbgE8gJdH7rUZzSCF05cDXT1xAZh1sYcf2skdcEeyGxlJ+76cBVOBlEMX965pvQccm085QnlWb8rQQi",
	"Eft24o2G6CJz172UweXUpKmducgAx966CzcMXutq19398HTr8saD/xCb6fSCH3fzu0IqE9Lf1cW14SI3",
	"tUWfWBHR5ZJ0HdfJiTq/NqdA0aP6Dhp5ovSZReiDndOVS310FeQa9Z66Dn9a4yRCGQtj9GttZd9kwvLg",
	"fG3C1Dlh5u7TiFeWgMvVS1hoaNyRr4WCnE0fZbYGlazQ09DWYT8hLovNJ1xpk7rLDdVYI1jTiVXRdNCa",
	"O+4/CVwBdAf7KQACn7fuGEBMQ6Wv9jUMTkXBTNnW0M46dcWTkHOld2Q/kpToMCoeS+35slq7q21oyu2y",
	"QtPNZl/iXzqgGvgopOttwg+CHC2bx4EbXUujlk25n2JWlyAfqlY1ZF2iWqW3yvurREqZ05L/yryjQbNf",
	"KibyxPKMUM94ycCvrkQwRLkm2sB00GHe3M2mgggReXFGlrI0LqnM2rlQLc95BlEZ2vipt/m+KGQfsM9a",
	"PoddCHbM8Kyf9idjun0SEEqwHNbbCNCOY+mU4NZY396qYWNGCrZgooC65mKNa8FfLBYGcE1zKSZ8Wimr",
	"wde8Ip8fZ4w+ll1gx3US3g+flkm+U9wYBnNaMKW5NhbF7jqWuBW3KgOPISTX12tsGsT+HpQoSrzPv8Gg",
	"w1UrgSbihxHXnQGDVjTqpbAEBrelce1/XhsqivHqYjKx9nR8cL2gCgo1izdMG3yuDHrxT8cazwvdCLqk",
	"HLLTYgcv2IQp5+//vxVnOoeB4NSNf0pLPuEICpsqWmwOf6XXyMS2O13ils5qw3Vsbmaua1+Kk0h/IbM/",
	"RxdZqj98B58YMI28rAs0Xr9Y2lfgXbmjaAGFINuQ6NHI9IPmVOBBZ21oWWJMLWLZFbFxlyqEc84+BmW3",
	"VS7ncyoKDRbsLxWr7DfsDoK5TKN5FRbCFa5P5p5G9Qr32TAlow581dq477C4cK8mTIQWjgK3NKhEwdRU",
	"AqtmGu/qU5gCll7nBOdy6MJUrhhLZDQTWMFxNZ1yMR3WqLSO4V8ql81TCwbSPGcLA8uoqJgC468dywpb",
	"od5bnCssDhSNTlR+MD4VB4vbnYv0izls795+SIWB6B3leEdaUJCcfZ6mdqGXvsYStoyRFPRlRSUKKvIV",
	"QG55tR+UTCgv5RJvuUYnSi8okAFtgUC774bdDGob/G4/WxzlVLiicj6SHZhYaxEr9wZvC/O3eVRxfOQQ",
	"fvNsziescaE1MtRV9+rmUXSMZfHbh1mw75h01DPFpclwNsn2w7KiXlpEcxcFGxsO+Hi0w0URXYxrPYrp",
	"BoYTlraDr+3TI0iGMuUcSMR1BriZHOIh8kfgiX2I4EO4ZM/+D84/Ny1eumA+f4SXq9pOt4Cgap/LOUsE",
	"fPAptrjuOjbbF5Rew9PKSLuyLnSaMmvPkAcbYISM4SRn1sde8hksJRfR5KHCucZD/fg0lNzk5JtJOp0m",
	"NRbn3llc1/pHbguONjP+fXZmKhQsQ/OVH9dJhp6E62WGszv9m2TtGvIDtwojAGzgaiVbshKMVXSSwHW3",
	"UtWvyd5gnaSc3ZU4rfFga118Bw/T7b88vvUPw5YNrTvR72pf1nAVS6puuDqyMSwA0zJ18LaaHevaa2gI",
	"MjvNOI/RRFEQq7HkM14Wim06ud5xSDC+I61jI2mKfj1lecfKYx0H9g9ZdiyWevIhnCVLj/fgFEDx8ZMI",
	"k+08GhNS6kIXlt4xrFQvMCuV/30ly7JajNbltPt4k+1IybIk1SJe9ZAMJOFsLSoG7iiS72lAquDmGQVM",
	"ngtXTdwjeRRP0fuTi8+pZsQlsZKreJAaKqrFulS1ggA4Z8c3KSpAKZx5XoFqTHX6mPpSWsvW2Ye1xyaP",
	"cXPFzPyOMgFI+Im7KqVTL7it2ojnCDkU6fTOrlr2+o4UG85mHq4OQ51c21Nj9cR8WUEGrOYFJvmsm1uS",
	"MK4bGeMgBKVulRFenyue0nT3klhJbMeowR8oLt5hnW6Fzw39nrU+KLrRuR+FQoQ3zWMfEM1Yx/0Q8YRO",
	"c5QX1FACN9Id5tR/8NV1i6gW9vZYbRzikItdU2vWgHl//4H1rJ1TuAJp4ggqqbtaE9ef9elKV/jgSkpz",
	"m/zeQ6kZJc1H8bSZr70KCySlaVr84Ridv9jc6d9fP1H4xZPl8dfk5up8SMhpWTq/TXIjevvC0rT7cFVp",
	"SAJ1xoEVayUXb1kRLz8FQyP8FzhfKGEupXnAG08f9dbSM7wkbfcyH4983em+V37uMbO9Lrl0dLbxNtba",
	"Jayss/w6Mo/sJPv3Tz8V//HTT8Pkz1cHLPlQl5QJTzAyl6WHFOrRuPoliRPvsvFZLycepM+7ex/g2L7b",
	"TE6yYnHSa0y1333Nbm7OX3TcGdN5QDJm2fm7toeE/HPGBLm+fnHpq6wO0tS72uFgKExkB3R3GSBmqCB/",
	"e/PmkoyePX1KLv4+in4Kn0wJvY9eH12/PL06+9vI+xxJgZ6vguvcal6rrqoLCWH8+PToO3o0OT169fP7",
	"P98fpf/+aZd/j5/df/VANXYShHfTeor588l6vHdc0/HQyCfk6tXZn46fPUtk1pyZmSwgN6tCx1OuGKYW",
	"ASgAbONYpy9K4fV7zK8aMyIX9Bf4+gyTDP0Nfb4N+BCN7R+vRHTKOPYLx/Mrwe3OAzda+wwwXM+IXQlp",
	"UPAtFIRAVkRX4wlnZVFzi9o5DD/e7blbNILPWq1qiflOwXABCn3j+Dz1lfIfoPC5J1NvxrWrurpSKxZm",
	"LIaT3jCgG7ZUnkvlb02AuRwFEYHU6Dp1CwyW1BoDSrfsmQSFPao2g/sK4y7xvHtnfeI9axBvRx0VxHUS",
	"idw7d7YCmk7YX33fnq9LACAv39Bpl3H2UFQR7hHx1Y8at5oDPMCJZ4wW4IFPbdirV2f/69kfn9VnyXeq",
	"blA3tz7KtlhXdqHlXTgU4aOWs2sd1IAOzElK0dZpuOxodtz3vy1kG1JD3aYAsm7CnKJDsHfmey7edpPN",
	"zdV561SOUyDCJrRMzd/BSJXhtHSlGfRHISrqgU4dwqEkAmg8iQAe7DSdFHFma3Vb+khcBO7UUHQ6R/lP",
	"TbAydGcV/0NtKku1vPMOq9dMTVkRGp5entcbZ4PMcFPiYdHwTTbIlt7iy46HT4fg7pYLJuiCZyfZH+ER",
	"qO8z2GuJM+OJ/X/KQKKFILQ1c7O/MuPNyWNYBlckyH757OlT+wdEM0pDdxucbf3kvzTanrhjt+3ndT4f",
	"QFObSIJOHawhuua22aSzsHwZ9AmVpQ42gdrlah1Qw4sYw7Cf3A9qa/DVnBlaQKXvHovx2n+806K8m5fZ",
	"yfs2dKj1BQiGnyaGEgfRVvz4bx+QZt0QZ0Flum09+XD6bXX5iVOxg/fJe/fjvLjfZb1Cq0dYOL9cB1uk",
	"T21pLLOPN4L92OkHjPKRkfMiSsh1M7NCKzsBKZINMizymdVXzdvtKKnj7BrVwiEWn5JO6ibdzv/8xw9I",
	"J26MZIO3nnw47bS6/MQ3uEf8k/fuV98d7huGZo+wdH7BDrZMv8Et3ppZ5xavr9q+Wzxxqm+lF//tQwoC",
	"dzYVh0oF+ZoXBxAVa3r+xHe9W4wn7+vw9937rnmz8eOtbWNFD72Ov0XJv2aC3QpA18J+IJPooDV3uWhz",
	"cYfuNqD3n9WsB9lC6o59cyn11o3j8FB/7K+ocvGk57JYPdRugqGuknHu6yEbFyl/sM29bUt072XnwqlK",
	"o2OAB07kOOb+aXDe+/v/HwAA///dNO+7Q+wAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+x97XYbN7Lgq+D05pxM9lK05ZmbnejPjizbM9qJI61kzeyZJCOC3SCJ626gA6ApM756",
	"9z2oAtDoD5JNmpLtxL9EdTeAQqFQXyhUvU9SWZRSMGF0cvI+0emCFRR+nqaGS3EuZvL2kipaMMPUm1XJ",
	"4CUTVZGc/Jg8lzJnVCSj5IeqmDIVfpwqRVfJKLk2iot5+OEfX0z/i6Um/MDHP48SsypZcpJo3+rdkR3p",
	"BdOp4qWFB0b3o54kp2SKv8c1CPapgJ/jFjgnyakg1P4kcua+0eMaHHjPiinLMpaR/3N98QOR8GbcgrTZ",
	"UfQh9ObmbOHAiYxb8282x2/0OLm/H/ViHeZMs4zbVzS/VLJkynC7EjOaazZKshpByUnyZsEIFzOpCmqf",
	"EDqVlSGUlL5DwkWaV3aOXBBKrlg243pBKIxNZlIRs+CaKKZlpVJmwS+jQd8np3ku7+g0Z4hdeNaFgfqv",
	"LKqZ4ilZ0rximkhFskohcPhohCBpvmREUTG3H83COyospKliBROG5kQbVvq+ArT17KgmtCxzzjJiJL50",
	"UzNUzRmsJjesALBFlecWxuTEqIq1KfB+lChGswuRr1ofUEfJ745yKeYvWpO38CDGVkQvaJ4TLjKeUsOI",
	"2YCZR0XDyH6RsRkXSAgWsK/DysYdu50CAPiF01+TNKeVZhZC29RT0XXJUj6zc+VSjAl5JRXSuh45CJuI",
	"UaxUTDNhWpiJxmc0Xbj9UjDY2IT04ViKfEWmjPgOHeyA4IAXID9c3vihWVBDNMC+IjRMcwxLvGRKcylO",
	"LV9ITpLl8e0fb59a4gjouqTGMCW2bYQSP9uXatvEuoY2I/Y5jDhTKQwFXqDYvMqpIuydRaKG4S1mcFJT",
	"ptev0q7z+eik0SGCoYv9Dzt+Wyg1lz1+a3fIAIx9FLbkV94iONsDZovtVkvsmJYlo8rzFU0L5iWeypA6",
	"7PNJE6d6EuDbmTwGQd8llzVL/qe+Jd8q534bMunT29OwFPbBNf+VvabveGHVz761KPClE1lAB9ARy0Fq",
	"ahyRZWv2HypNyUnChfn2T8M5LheGzUH93WfjbQUaWDBAq5la8pQRXZWlVGbtnuwOKKTpyEYpjnCk7Tzw",
	"mdsQYRW42LAK+HL9hBT7peLqU1uGwVBPV83VeORFeEENfQMz7kM+mCNhXIuZNViWgl3MkpMf3ydfKTZL",
	"TpL/8aS2Bp84U/DJejvwfhQMQbs+P9//3F2YfdZh4AQsItiMVrkB5tyPjAy/QPayBg8PrVWZAXAQjlp0",
	"mnNLGJlkGoilVHLJM+TQOxIXn5HJlaPYiQdGk4md1GRMyPmMTDwlTeoRPdQTtFgnIxTgnu/4mS2ZQhaO",
	"MzKSUEGuXp39+dl/fnfkrQpYydoG7iPp/0SSdkx9w0p6Juk4H8sOsabCey3WrqljKSSYQUMYucPJWq69",
	"s5xsdryL4ruG4/RMayv3OXZLhWxy01I5RvpJL5WD8fBL1ej44y7VD7RYs0TCKuTOcq+ZUFgg1Ops7w/B",
	"DPsH3+SUAm7/g9zM78+dOhv0JaYY4ZarHVIMTIPLcw81e1ewkPjYO1qUORtZll5ppgB/VGSkpFrfSZXF",
	"jgyqGJElugqRd9OpZiLtYlwHyACYVLGMCcNpjp1UmmUHkDSWbu0H8dpNCPQJrbcIBnS7btZ4Mmoo6glW",
	"ZxPOF3s0pZpljyPqvXsEEGyR6BUXkITguLVkPfmLtLCODYhc1HLdsm8X71PWVJujdbzjZkFoEw8TxBzg",
	"fxI5ryfoSFzLctrdSkuwddcatqJf7e56nApPVXbOckbuFgx6aG32SJs2kli9M2ewRYZwnw/Ygx8Azj1Y",
	"3n7iPyJ3rQ8tpD/T2JUlHtpX/+7IuRkvG077f//hR3r06+nRv25/dj+eHn13+/P//OZ//+UPQJb/7Tr/",
	"79dMazpn3/z007i/yVd9+7A7wdqduqQ5zwiMYunRzyI4e5J7i9yzBdWa6zOZ5wzmd9t5ssdRSBoaw7Zw",
	"XU4CyggX2lCRMt096HD71a4Ue2fsk02mEnx8tPzTrf/+fuR7YIbOBzeHj+u2PBvckmdRO+MY5qCW8DGY",
	"VBH+3g+0Ea8cKm/j1tvNQ6tMsg0HSKgtaRRcXEcr2XCXDcTMFZs9gOOURid5ORdvNXrGNgNfTzwQWCV2",
	"IS/7dacTwd6Z77l4O7if0CBSFQctM3xshTMrBrex37Y5qF/9fnTEG6BJ1KPdeW/Y7W2dndav1nGKwCCA",
	"39ZMmFspAYdx9VHR5816PcPdg83W6MKlr1GMrv5ysdI8pTmpiQTUNaJX2rDCKz1hMVrN9YIxc1QwAz0I",
	"9C/oktpVsfpMLufQ+69SME10ZU0uTRRN3+oRYSLNpa4U0yOSIpjQCE6GQB1w29maVIRcV1MESo9CT5oJ",
	"LRVYgNQQiw+rTcjKaJ6xeCJfa1SWypwKBoq0ZQssI4yjJsUVS02+Ar1YhP/MQslqvmhJc0JOifbQNIbW",
	"w8a2Ch5NU6Y1n+bgptFyZu7sK+hNVUIT6Q5p/EKcG0JzLVuHfrlEpa7GCSU6l2ZEtEzfMjOyM5rS1cjq",
	"WIoRSirBDUmpsCom7KE8Z9mITFeklGWVU8PFPN5/fp85fVag5WKINhbXfOa75N43FgyI37vUdnvvzYC2",
	"rZ3+xvVwng3m5OcZeuxENaOpqRRT6zx29Re1GMRhH8vvGrsapJpTwX9FRVsxXUqBuwLMHiWzKrUECW5Y",
	"B6VjSo2WBYWT5MjSmylZkLuFLOK2YOJWyv4HRF85B5MjXsHspqSK272vKoZKgcxYvgaZ9lV0NBFD+Zi4",
	"nK7I3YKnC+eWjFZ4zgRTNM9XRLEZhFTIJpT7ahnXTHGa++iuPuRo+OLjYYc2MHFEc+CVLPMQAavl4F2Z",
	"ccdOY7RcG2oqPRgx7vO2NhXv6E2603l2YAXKU7xUTpoGWR8E72bNCUSO3VcgduKu9xQ6bo/GQqdC9+zE",
	"Io/VcQYgaxyBTxCx0cval3UKomjyW1LyvLTwwZxXNH2bjJLnOc0smbz0awfRi1Rkp7kU9h/73WunoZ9R",
	"leEfo3g2h9fyLhkll9I+f/mupELbGYySa56xlKpklPwL+7nOmf3mesHyWTJKXih6Bw7+1zKrcvvBmd8D",
	"lmgvn1tG+kLxpYfhr0pWJQAnFZ2zGN7zokCH4hsq7Jz+xqh5+S5dUIHHw5fyjqlro7htf2FpdofoU8AP",
	"xorCkCyDkDJW8CP/YETMqrQ7IF+RpSUR+HkkFWfC2NdOo/M7BxhEUWn0xuXVfA4OHyMta6lyw4/aDSSZ",
	"VQJtFSFVYbsf+/U4SU5JLqVmJGNwmCEVSblKK27IVFIFXTORobMr3ifoZHJjhe0cdvG4sdQQ4FoAIbJ8",
	"duRV6My3bw0yYFrjxqLX/bvXI5JSlcGWdxMDvIVNig+9lVZSi3eIZqtVaKkC3sY1zQ1fzIVU/Fc73vbl",
	"dIqvtjtzy5xr0rVzBkHKU2KYKtxcGh2Ho9oZN4SKlXfR1nQ6bmw922ejA2ZfZU4M0ZJOec4tFwM6oSVN",
	"rVIDrnRnHNWQNjeS7XnBoEf3aNzeqvHgQFyZfQy+b2IFplSo7Z9fOn+9YOZOqrd2VQUa4zBwc0ejn9k/",
	"IqmUOahuVLwd1xwkEFC8gooVcmmVgVEstyxhfTA1ISPpoLu7XqCg6Ph0AOZoeSa0bvghrIQvraxEaxax",
	"mFM1ZyOS87cMFEgqdCmVcfPyxuy4yeps36X9F87kyxgrZU7TOgz4V6bk0Q2a12hf2qHHju+67dIAK+6L",
	"kuPvjrhIF+TO2qczxZi16zK7QlY6jxv8Gyje/rID4QwBa0AhlGgu5nnQtO3WXFjjlYuZotqoClSucUMq",
	"wbJDszbXzJjmc3QcuCBlC69d4MK2tACiS685ubGTalvXZhzE2YNwlEMICC+FO1RagFOhYHYjO9CcGd5g",
	"ArZj5B+EG72WfYy9fN+GiIeYJ9G84HanQrOpldd4LBYxskijqellBMR6FKgVx7IbqigggjhFKUmJgW0E",
	"gki/NbJsdt3SR7oMGKevicZPx14pQsmNnqyMLzlwN2udSuVJjkaetIa48XwL0FTmLDAwi3R0ZwXB5M/9",
	"XE8WZaykytosYJCg5vOPxqHs+w7zXx7fPvvj7dMuy3cx012uXbdosCX7+D/hccwXXBhuL0KXx7ff3j4F",
	"E8gqDJVh6hrmGB8erXlxgDOkRs9fjpK+HCV9OUr6cpS06SipxTB+DydKjSm3mPFe50stHHaPmSicLdlv",
	"aplXHypYlQWOOdwByJEVr9OchUXTYFkCL4i9QvWJSu2EKlgh1WpEzi5vMJzGm2AocdHfhyYgnr6MCXnB",
	"DOW528XWOA/jArThzAnObcAR5g6O+o+GHk7A/JaFxIMfcyhy8fJ14NTuSO1RXNBRJGvr7LR7EBMO+7ac",
	"OuCpiEHXfwg28mqx3SSyMt0x7OePEm63kHfd0ePjh3oNCHnjbS4XxosI4+54esNMt010X5nndGBq1sQ1",
	"ppVSVq54mx1OnJvLN9p1x0RjPtT9jQ3g7nGa01qLxzrs6gOiOY/9zmxGCcqvQUe1TREaNWxrP4952ANA",
	"1dax9xn13//+DWkwzXXzhyaXzoRORsk/uDIV/Lq4thZuMK4vqTKg6sB5h/us/Rj83hp+vri82XQcUSoG",
	"p4sWjItrP1nkZguqyZQxQbLwmV2gGV1KYP1hJe0CYihJvZQu4heOwi78u7aNG/kH2icjYQroKHOqmHfY",
	"SIH+Orw/N+XoYgmUNs0l+P7kHAJ0xw4PfV2BjCuZmklVIPf2LiAXUoQqm5IQ9+K8jvEJ4nVBlfnh/GyM",
	"awU+qjYyguI4jtayD5zx2rUG9zhVGWibIRodXyOgPV15KrKNl/ibFDRdcBEFyKhKCFhB0eaNvdQV92V1",
	"Ta8BD4MprPf3TWbRXfNJvUcmwe6xbycNB3yksDv3bg+NQFBFxjWdzxWbAyHXCnOtEteMBxioxom4Wzwx",
	"EXVge3F5MxCsJr3J2SyXNHN4cmHbei+q6wJ1cb0OJkEuru3iLValnZyWiiw5u+sqBA1a7Qzg364Zxnbl",
	"SZZQyzGbYXrxfAoq6BysVZCcypq8avNuWAtO49N9qUUKOOospIrCDWvXJ5IMJTOuCpifxWZze0Z0E+/D",
	"Dtju5XpAI8LBGwSVOxpZt6XHhFxhSBLTRC9klWcNfWRyiYQl1XVVFFStJmB3Tl6DJRqe1SYhxPp5/bj0",
	"jaERWq/RdqoDVpzHqQXlRsayDjkHX1IPVHdFWwwtrOJaT3bEtYKXGRnF8vj2+Fu8etRo2iN2l8e3z46d",
	"E/o17AUVeZ87Tz7c7ey6/OJv/uJv/uJv/uJv3uBvDpzid+BodnP1DHdHNnsufL+joNLAfUAa5Eyk5/ir",
	"nT6+J6CRYAgx5GpAjy8ePnuYvUgi5CVe5oXd5YZDl+/z12ea/MFKMIzR6lWv9DfRbYbQfrTm49g3HTmY",
	"AXxU8Fw8BDbHk/xVbU2NCTkVLVqBeS/oktUHzTUYGBpc8PkCzpfD7Yb4CkKQ2g43R3UOOsPUjD6ob/uL",
	"MOsXZq+cTuy0nX6hFhRnd1s7CAhHAI/lm+vAESUyhNQ8LS+t995RrWXKQc8NEO95JmAbD3HhtZiTv22x",
	"NdA/vhPcwvJoy3QfaxW615aHeONjxD+O4D5UeP0j+lgjbl4HG/5eBHjbw/o6IOMsSLY4ZtbL/VHy/PWZ",
	"DwQMz06rdzznVK0aja9RHCej5BWdKp767wcHgfd1i75B/6/zGqFO0FAiamfl5tDSEBXpj5UppAYx6I+B",
	"CNDYcWhnvx8IsZHd8v5ZFeDMR7+9FfLO+bqevz7bqqt809J28PoTpjNwXWQM0zKA48GCUc/ex/stpDZB",
	"L8O5cDGH1o3gQyNrhcTD3kcm+65SiEFvL8uosVZtTzpXxCJtoHKHCpfL91LjTEeqKSpv3imK91ilShdM",
	"G7wX2jsHmiqpo9hAgMfFusbR/c3t0I8rXuC1tUIKbiQm1MVB0X/oPOnenxxQM4O+CTWGpguWESEzB7++",
	"48bOAGK3+7b7QQCpL0PUmyZmFvtSxt1C5tBtvTkhavix1rJWv71vtmshQNeDLQxMBewinz2vhDDZXkfb",
	"AFRt8MW1SW55fPvsGcZ9hpF9RlZwHICUunV/9/CqFdgypGNqG2lEMVMp0eNTi8bsdruoCiqOrKYFCU3d",
	"KA+RQ4uuHavGz6ma697sPMHl49FA1byK0oxavdqKIcNNZUKGzvgzn0HNtb9bMEFyKd+yjFRl+61ic66N",
	"WjXcXg+dzZh+vGnCVcaFS28MaY81K6gwPNUh6XG0RNFdw9Y5uv/qyvXsA94wcyNc3ZEKbzGDQJxAdk70",
	"wuNZcH15EaMYtqZy9LdVJaE+OXbQSiNThIXyCjW5nWf9myJceq2tsAfdGJMAz6Q3v3147bJvDctiH030",
	"mi2Z4mY12Jr4G6O5WexpuVyx3GpHTY2+taWJZiB1oqMfHx9V24c1zj/KJrx6dfbtd0+Pm4lBSwken5CG",
	"zl++HzARSIVHS/ulsgZ9l7gAeVrmlel1Z9xo1Dm9z05X8znTLoRAoCUrwUTLl3jXX3NT4SZw3r8KunhY",
	"grbdqzANT6R+QEKchNTglFMMbnG1G7W2QJtj+eRxoP37e1Fxey5Cm5Kuckkz3ULvtWHlmnOQnGuDcSep",
	"LAq8Dqrt53uhd9C5SROu2+a/FvAD0vUBpjU0w2IsOTwTwuR+9X/RzglpfC/+PtmSTjpmaVl0zIkk3Bef",
	"h9+3yXEQ/dcDXDGqe5C9LYKpgwPvdTY+s4JLJe8OsxhUAMGaJWEveHYxQe7cTQfgUwGM9w4f7MVRr0zC",
	"oYbWU1m75VHoD9zt+DHsecjon1KXHgg8ez2+pWX3GDwkmu0cjXmVYBd3GFzQ66TVGKiqO7x6YfGbDUl0",
	"j18qJdcEzzL7yjNqjKHonkJ1DBu2vsM4oiSuBAOuAxhs6CB/cVgbv3yHiQHOxUwOslHC2mLMW+2tQgD8",
	"V4NFRNuG3F8oIB46xoarBjYU7PtRksqM9Sp3qIdHKhKtpXSk7fpV6LO7Dq9mfzhU96OkWGdNn7bt2wa+",
	"WnZPiFnAlw228bBIODiQbUYKNFHjaTA3XcP5jmoG2cNs99/nbbCRmTwstAGobZyuo6i2FcJd/UdeVNXJ",
	"8WhHDQxBmQhFMHtqrbqnph44yppF/3q4cVTGDMdwmYBvrs6dOzJS3S0sDaa4f8mPvnIf9wcpO7XPlEKl",
	"xJur8zVFmQagJZSZqRQ/gnNKJuBQ6CHMuEGT2sNFcKm4rLX3rvTGt6EQF3PmWGNs3Vt0p/Alfp4+UgGe",
	"ocBi0TFUYSdPJ33VrBZ8vmDahC7HhJyLVDEKkdnOQmgfvGYsfBG3mxFzJ4PsbkODsTDB2+cboq+NvWOp",
	"M92h7Jkj8E4fQZngIi6ThqN3SKXOKANj0xpxGNBjVfdRo+wM1+SpQ1uNZE0q5wXJ7PYruGC7AN3irevT",
	"8/uM9D2d7HaBrZeJu5CKh7nKthF0mL5RqzMfAdlTZiNkJFTMKB7C8DYxo4+2/ZrpE7cA7Cd/LgxTS5pf",
	"s1SKbI3U4u4jMmXmztr2nwE2PMxwGqZxdqMwgQEYssNWghttJYfF1xuokRfym60VXVhLDySFT2Xp2+wh",
	"yx4jFGh3iNeWuGh7vIKYj09KkPmF8kJdFbTFHvb0Q9Qq8D4aHrLbIMPajkJfYqXtMUy9E4iSXM4JE0at",
	"RqDvLoGtU4t51Fch8iBowpEb7jP2b2zi8lFQ0JmlvtT8g4lM2h1+hY6wOGOkD2m8KTNqIGck08z41ENn",
	"qzQPD9/4ykIaLmJCKPULTudCasPTF9TQZJRcvHw9PD6ov5MT/5xk4QVcG8PEh/GUTvz/ZAkPsGJt7Vpp",
	"ze4kucT7afH9pgre1WEQYzeL6GNBLl6+7qHewFciZMVj4B3v1D5v9t9ZiBP/yF0thKfjsBxxp3brm3Z3",
	"zeU5wSdePTRczDEHGKQSXHmFx1VTD7rymd8yO5p7p/Vm85kVgMloYveX6LfkwmDbVaLQ+x43+ZvDPLQG",
	"1IC09zDBnSZ8L+cvLc/a/XrLHtEVdXaABnyPFXAR+/faUHwJxfjth2L8rgIg9vBNXCg+5+Ji1mC/uzGF",
	"TYf411sP7R+UK/QfztdDRmd17kLvw5zQry0C6YqYH/agvoHSz+9APl6eU19uN6VW4ZGld324QJSOm0aK",
	"tNULVo4r5NJfWPbt6mJsPQvz5+7B+46xRG94wbShRblGv+BFG1CZQjqhrGEsWv3wyH58wO3R8MNtBOR+",
	"lNxopk4rs7BMEnnNNUx1TWYgvDBhjaNGm8BaQ3XMAFN05yckN2mQ8GPYxzdX3/sjoBbgjQharnvB7UzK",
	"W8+Oq0ydIWmREKamvb6qq9z40xHbU1RdsVeNe4q0eeMG7V+IAFLw2MO9108D2/sB9+A4fagoCfTzhi8h",
	"0jurcw3StgnD3nFtogyH8VUk56vJG+lWNlk+n7WnoceMilwMpzlTUHmivucGyZ1CdbAdbgtBVz6nQyQ6",
	"rOiy78adcXo+5vEH4wYkPV/DKQjIC5e/xX+8JaFPDWtIKtXi63StUQyH3mm7XgtY5P0z3H2IQH0jUlCo",
	"MEFFykaY1sjuebjsDJsSPbj+aw+Py+MTSo8xAwHPqeFLO7Jgd8GB0sXxYHhD7PX6ZYCznbpEugtwdQKh",
	"L1Sb5nd0pUPIatPgtMqj8glkWt6P1l3ingLKEfvwF1WiGnQ3NScsCrt28RkdZmFtVTI4BBvfAlR9BBia",
	"ghspsPavo+GGWzltXStiCBd/T0bJP6kSOKczxaGuyw5OQd8CHEvun2gJA5HzomAZxDU3mO3F35OT5AdI",
	"cj+OQGm6qfr4dIMa1lmqleC/VD0GaywforS4zYwTPuN+yCl0KCrYBM4gKjjP9lj8YYXzG2Izru+fHLp4",
	"XVtGx4MNQYKdzx5ouNiUqXldePDFy9eEvTMMis9EqNiu3OAX7XRktr/aweqmG7DROMqHut2ret7bAovc",
	"XgEn02erzYySf/94evQvevQrDPEfX+3ipcHC8C2VqJmXNrA/YVnQbOYPBbiYw6PwD76CCPfhPNG2Qrqp",
	"k1ppPF5gGZGzmVvwqGpsxIRCG0w5YjcPFxUEMkNoxOnN/8O+gH2KTSMBqTroez6DF+PWdC3nNawopaJq",
	"5TLe+hNip4kPnkFKBTH0rTeZpc/ZFqXUlbNZZGlEi7ARDttIwAQPBoeoa+Kvu9UZMLk8vj3+o7N/AoXh",
	"sU5L4QZqeiVVypCU/qpoymZVfr2oTCbvRPToimlDQTuH7+t/fyh46ASIs9ILQNTzyhgp2qd/15Uumcj8",
	"yuOBUwXukFdVnkffDiboMIGT5E2lEP8GxaupBXu+In8QUhzN3YSIdpP8ZhzB77sQvT2M29M/SSyqiO2m",
	"MZJd/ngw90hhs9D3uDvrE3jQOO3bPpdvxoQ8Z3b/aShQhQ4yyIhpMMFQzgXTIzKTeS7vUPe1wEjV+ci7",
	"TWKXWpsI4mkPmGKHrDa0D/tu7GjrJPkrlDkFnT86xAVbQ1Wl8bdRILrKJX0U5IfX53YV3/35WxIqSxuJ",
	"PkesWlQfe+oRyjFmWDwC7jhM6RTVjxqRBc1NKwVoL+kE/pac4N840CuisCngAiIs0LPpOKhzkKATIpT6",
	"mjFqKgVKRTu1ZZ2pVHdPkj+MovwBNBZzy5ukVL+0JMX6SKjNFk6Sa15UufdaWv0DwgCdqhSSiWLHU2gU",
	"ku+GmmbIOk7cjy56UYjg9x+KTc+5TpJ/Ku7AbqRcB4waSTKu35Ipm0FSVCcyglTimPvzTtcZzqEPrNjo",
	"EJjhgZuXlFOaviUN3t/nRojZ4FqzuSF47nieYyU7Z0fLsJKWhwJgToRFX0Er3OQxayTkppTCGv1WdlkG",
	"6/YU+AIwoWrQcuqTP7hXGmzyUY9O7qJOL2azSYtTf/gsxeNMcsOsxKRHqBxuZiNCZ4ap8BWcs/h0cI5X",
	"fzpL7JDRloi7oKOsg3LacpRqC8hGYQcn4/50yYszuyF3wJHnMhmfQUyg81tP6ilN0JUDFWu+hpNxKE6H",
	"62eNvDbYpcRUfmNCXknlM5yMajF/euab0GnOtPOUR5lmfC0eEYl9O/FWQ3SRuSoYeXA5tWlqZy4ywrG3",
	"7sINgze62nV3Pzzdurjx4D/EZjque+IKYiukMiF9CSOuDRepaSz6zIqIPpek67hJTtT5tTkFip40d9DE",
	"E6WPLEIfbEFXLvTRZZBr5Xvqu/xpjZMayjoxxrDWVvbNZiwNztc2TL0TZq6KlLvO4V2uXsJCQ+OufJUK",
	"Yjb9KbM1qGSFnoauDvsJcVlsPuNKm9hdbqjGHMGazqyKpoPW3FCvWlwBdAf7KQACn3dqDCCmIdNXtwyD",
	"U1EwUrYztLNOXfIk5Fxx6eBHkhI9RsVjqT1fVmt3tQ1NuV1WaL7Z7Iv8SwdUAx+FdL1N+EGQo2XzOHCj",
	"a2nSsSn3U8yaEuRD1aqWrItUq7jYti8lksuU5vxX5h0Nmv1SMZFGlmcN9YLnDPzqSgRDlGuiDUwHHebt",
	"3WwqOCEiL87IUubGBZVZOxey5TnPICpDGz/1Nt8XhewD9lnH57ALwU4Z3vXT/mZMv08CjhIsh/U2ArTj",
	"mDoluDXWt7dq2JSRjJVMZJDXXKxxLfhymmEA1zSVYsbnlbIafMMr8vlxxtrHsgvsuE7C++HjNMl3ihvD",
	"YE4lU5prY1HsyrHUW3GrMvAYQnJ9vsa2QezroNSixPv8Www6lFoJNFF/WOO698Cgcxr1UlgCg2ppXPuf",
	"UNR9urqYzaw9XT+4LqmCRM3iDdMGnyuDXvzTqcb7QjeCLimH6LS6gxdsxpTz9//fijOdwkBw68Y/pTmf",
	"cQSFzRXNNh9/xWVk6rY7FXGLZ7WhHJubmes6VMmXvk6tv0dXs1R/+Q4+MWAaeVkXaLxZb9dn4F25q2gB",
	"hSDbkOjRyPSDplTgRWdtoJj+uIFll8TGFVUI95z9GZTdVqksCioyDRbsLxWr7DfsDg5zmUbzKiyES1wf",
	"zT0+1cvcZ+OYjHrw1WjjvsPkwoOaMBFaOArc0qASGVNzCayaaazVpzAELC7nBPdyaGkql4ylZjQzWMFp",
	"NZ9zMR83qLSJ4V8qF83TOAykacpKA8uoqJgD429cywpbodlbPVdYHEgaHan8YHwqDha3uxfpF3Pc3b3D",
	"kAoD0TvKsUZaUJCcfR6HdqGXvsEStowRJfRlWSUyKtIVQG55tR+UzCjP5RKL/6ITZRAUyIC2QKDdd+N+",
	"BrUNfrefLY5SKlxSOX+SHZhYZxEr9warhflqHlU9PnIIv3k2xxM2uNAaGeqye/XzKDrFtPjdyyzYdx10",
	"NDDEpc1wNsn2w7KiQVpEexcFGxsu+Hi0Q6GIPsa1HsV0A8MJS9vD1/bpESRDHnMOJOImA9xMDvUl8kfg",
	"iUOI4EO45MD+D84/Ny1evGA+foTnq8ZOt4Cgap/KgkUCPvgUO1x3HZsdCsqg4WllpF1Zd3QaM2vPkEcb",
	"YMRa/5ED1529pAtYSi5qk4eKuLp/TOh9nHwzScfTpMbi3DuLm1r/xG3ByWbGv8/OjIWCZWg+8+M6yTCQ",
	"cL3McHanfxOtXUt+4FZhBIANXC1nS5aDsYpOEih3K1WYDagrG6yTmLO7FKcNHmyti+/gYbz9l8e3/mHY",
	"sqF1L/pd7ssGruqUqhtKR7aGBWA6pg5Wq9kxr72GhiCz44jz+jRRZMRqLOmC55lim26u91wSrN+RzrWR",
	"OES/GbK8Y+axngv7h0w7Vqd68kc4SxZf78EpgOLjJxEm23s1JoTUhS4sveOxUjPBrFT+95XM86qcrItp",
	"9+dNtiMl85xUZV3qIRpIwt1aVAzcVSTf04hUwc0zCZg8Fy6buEfypL5F728uPqeaERfESq7qi9SQUa3O",
	"S9VICIBzdnyTogIUw5mmFajGVMePqU+ltezcfVh7bfIYN1cdmd+TJgAJP3JXxXTqBbdVG/EeIYcknd7Z",
	"1Yhe35Fiw93Mw+VhaJJrd2qsGZgvK4iA1TzDIJ91c4sCxnUrYhyEoNSdNMLrY8Vjmu5fEiuJ7RgN+APF",
	"1TWs463wuaHfs9YHRTc692uhUMMbx7GPiGaspz5EfUOnPcoLaiiBinSHufUffHX9IqqDvT1WG4c45GI3",
	"1Jo1YN7ff2A+a+cUrkCaOIKK8q42xPVnfbvSJT64ktLcRr/3UGomUfNJfdvM516FBZLStC3+cI3OFzZ3",
	"+vfXTxR+8WR5/DW5uTofE3Ka585vE1VE7xYsjbsPpUpDEKgzDqxYy7l4y7K6+CkYGuG/wPlCCnMpzQNW",
	"PH3UqqVnWCRt9zQfj1zudN+Sn3vMbK8il47ONlZjbRRhZb3p15F5JCfJv3/6KfuPn34aR3++OmDKh6ak",
	"jHiCkanMPaSQj8blL4mceJetzwY58SB83tV9gGv7bjM5yYrJSa8x1H73Nbu5OX/RUzOm94JkHWXna22P",
	"Cfnngglyff3i0mdZHcWhd43LwZCYyA7oahkgZqggf3vz5pJMnj19Si7+Pqn9FD6YEnqfvD66fnl6dfa3",
	"ifc5kgw9XxnXqdW8Vn1ZFyLC+PHp0Xf0aHZ69Orn93++P4r//dMu/x4/u//qgXLsRAjvp/UY8+ez9Xjv",
	"KdPx0Mgn5OrV2Z+Onz2LZFbBzEJmEJtVoeMpVQxDiwAUALZ1rdMnpfD6PcZXTRmRJf0Fvj7DIENfoc+3",
	"AR+isf1jSUSnjGO/cD2/EtzuPHCjde8AQ3lG7EpIg4KvVHAEsiK6ms44y7OGW9TOYfzxqudu0Qg+a7Wq",
	"I+Z7BcMFKPSt6/PUZ8p/gMTnnky9GdfN6upSrViYMRlOXGFAt2ypNJXKV02AuRwFEYHU6Dp1CwyW1BoD",
	"SnfsmQiFA7I2g/sKz13q++69+Yn3zEG8HXVUENdJTeTeubMV0HjCvvR9d74uAIC8fEPnfcbZQ1FFqCPi",
	"sx+1qpoDPMCJF4xm4IGPbdirV2f/69kfnzVnyXfKbtA0tz7KtliXdqHjXTgU4aOWs2se1IAOjEmK0dZr",
	"uOxodtwPrxayDakhb1MAWbdhjtEh2DvzPRdv+8nm5uq8cyvHKRBhE1qm5mswUmU4zV1qBv1RiIp6oGOH",
	"cEiJABpPJIBHO00nRpzZmt2WPhIXgZoais4LlP/UBCtD92bxP9SmslTLe2tYvWZqzrLQ8PTyvNk4GSWG",
	"mxwvi4ZvklGy9BZfcjx+OgZ3tyyZoCVPTpI/wiNQ3xew1yJnxhP7/5yBRAuH0NbMTf7KjDcnj2EZXJIg",
	"++Wzp0/tHxDNKA1dNTjb+sl/abQ9ccdu28/rfD6Api6RBJ06WEN0TbXZqLOwfAn0CZmlDjaBRnG1Hqjh",
	"RX2GYT+5HzXW4KuCGZpBpu8Bi/Haf7zTorwr8uTkfRc61PoCBONPE0ORg2grfvy3D0izboizoDLddp58",
	"OP12uvzEqdjB++S9+3Ge3e+yXqHVIyycX66DLdKntjSW2dcVwX7s9QPW8pGR86yWkOtmZoVWcgJSJBkl",
	"mOQzaa6at9tRUteza2ULh7P4mHRiN+l2/uc/fkA6cWNEG7zz5MNpp9PlJ77BPeKfvHe/hu5w3zA0e4Sl",
	"8wt2sGX6DW7xzsx6t3hz1fbd4pFTfSu9+G8fUhC4u6k4VCzI17w4gKhY0/MnvuvdYjx534R/6N53zduN",
	"H29tWyt66HX8LUr+NRPsVwD6FvYDmUQPrbniou3FHbtqQO+TUuoeSmx+7Ss5tTB08Fnhx0yb5zJb7UQM",
	"TZ9YI93doIPgukXXNXbfPFtxR9oftAt7BmiSG1ZdctdZMPCdZZ/GThkluioKqlaN4lCtnAXAD/9/AAAA",
	"//8qtvBK7ugAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
